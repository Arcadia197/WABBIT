[Wing]
; currently: linear|fourierY|fourier|kleemeier

; fourier:
;       the wing shape is described in polar coordinates and the radius is encoded as fourier coefficients
;       fourier coeffs are read as a0_wings, ai_wings, bi_wings
;       note historic oddity that a0 is half the mean value (the 0th Fourier mode)
;       T. Engels, D. Kolomenskiy, K. Schneider and J. Sesterhenn. FluSI: A novel parallel simulation tool for flapping insect flight using a Fourier method with volume penalization. SIAM J. Sci. Comp., 38(5), S03-S24, 2016
; linear:
;       The wing contour is described in polar coordinates, just like in the "fourier" case, but the R(theta) is
;       included as a table, not as Fourier coefficients. This is useful if the wing contains sharp edges, where the
;       Fourier series converges badly (Gibbs ringing).
; kleemeier:
;       the wing is a rectangular membrane (possibly with bristles)
;       T. Engels, D. Kolomenskiy, F.-O. Lehmann, Flight efficiency is key to diverse wing morphologies in small insects, J. R. Soc. Interface 18 20210518, 2021
type=fourier;

; fourier series for wing shape follow:
a0_wings=5.460427e-01;
ai_wings=(/1.408298e-01 -1.124799e-01 -4.349964e-02 4.501674e-02 1.173461e-02 -2.292008e-02 -3.081238e-03 1.035402e-02 -2.041623e-03 -5.478132e-03 5.101605e-03 5.391308e-03 -4.011262e-03 -3.979874e-03 2.746749e-03 2.256921e-03 -1.829920e-03 -2.873970e-04 1.983130e-03 -3.055241e-04 -2.292435e-03 -3.950413e-04 1.286480e-03 5.993408e-04 -3.200211e-04 -3.253535e-04 -2.053941e-04 -2.920371e-04 -1.149041e-04 3.904626e-04 5.816150e-04 1.751470e-04 -3.435031e-04 -4.832220e-04 -2.071001e-04 3.325742e-04 2.961732e-04 3.301677e-05 -4.897686e-05 -9.076917e-05 -3.472791e-04 -1.131473e-04 3.338738e-04 2.253169e-04 -1.815491e-04 -1.498895e-04 5.311013e-05 -8.877141e-05 -2.265185e-04 2.122822e-04/);
bi_wings=(/2.520500e-03 1.644037e-02 8.834148e-03 1.906624e-03 6.657657e-04 -2.597555e-03 -8.553933e-05 4.854595e-03 -2.041760e-04 -7.537730e-03 -2.793127e-03 6.402901e-03 4.172224e-03 -3.789795e-03 -2.913002e-03 2.542334e-03 1.524661e-03 -1.955362e-03 -5.110983e-05 2.710746e-03 2.969133e-04 -2.371048e-03 -1.187349e-03 8.358321e-04 9.700629e-04 1.400740e-04 -2.529042e-04 -2.785688e-04 -3.289354e-04 -1.993831e-04 2.333313e-04 5.647346e-04 3.666858e-04 1.566437e-05 -4.165315e-04 -3.784499e-04 -3.245416e-05 1.067783e-04 2.020010e-04 8.110691e-05 -1.757430e-04 -3.623610e-04 -2.005874e-04 3.014634e-04 3.311851e-04 2.431600e-06 -2.429317e-05 7.001314e-05 -2.389953e-04 -4.202872e-04/);
x0w=0.000000e+00;
y0w=5.000000e-01;

; if type==linear, we give theta and R(theta). both are vectors of the same length
theta_i=;
R_i=;

; if the type==kleemeier, the central membrane is rectangular, and you set its dimensions here
B_membrane=; default 8.6/130
L_membrane=; default 100/130

; if the wing has bristles, they are defined now.
bristles=no;
bristles_simplex=;
; if bristles, give a four column matrix (x1,y1,x2,y2,R)
; note last entry is R and not D.
bristles_coords=

; the matrices for corrugation, thickness and damage mask are equidistant samples in a matrix.
; the coordinates (y, x) are understood inside the wing bounding box (stored as Insect%corrugation_array_bbox) in the code,
; unless here you specify a modified box
corrugation_array_bbox=;

; note the ordering of matrices (y,x)

; wing corrugation and thickness distribution
corrugated=no;
corrugation_array_bbox=-0.358435 0.134705 -0.051663 1.044327;
corrugation_profile=;(/

; wing thickness
wing_thickness_distribution=constant;
wing_thickness_profile=;(/
; if the thickness is constant, we can set its value here. the default is the value specified in the parameter file.
wing_thickness_value=;

; we can use a 0/1 mask to damage a wing (remove some of its surface)
damaged=no;
damage_mask=;(/)
